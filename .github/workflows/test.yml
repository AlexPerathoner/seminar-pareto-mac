name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  swift:
    name: Lint
    runs-on: macos-11
    timeout-minutes: 3
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: Lint
      run: swiftlint
  test:
    name: Unit Tests
    runs-on: macos-11
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13.0'
    - name: Install xcparse
      run: brew install chargepoint/xcparse/xcparse
    - name: "Import Certificate: Development"
      uses: devbotsxyz/xcode-import-certificate@master
      with:
        certificate-data: ${{ secrets.DEVELOPMENT_CERTIFICATE_DATA }}
        certificate-passphrase: ${{ secrets.DEVELOPMENT_CERTIFICATE_PASSPHRASE }}
        keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: Cache SPM modules
      uses: actions/cache@v2
      env:
        cache-name: cache-spm
      with:
        path: SourcePackages
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Pareto Security.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Tests
      run: make test | xcpretty -tc && exit ${PIPESTATUS[0]}
    - name: Update coverage
      run: bash <(curl -s https://codecov.io/bash)
    - name: Gather screenshots
      if: ${{ always() }}
      run: |
            mkdir -p "${{ runner.temp }}/screenshots/"
            # export the screenshots
            xcparse screenshots --test ./test.xcresult '${{ runner.temp }}/screenshots'
    - name: Upload screenshots
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: screenshots-${{ github.run_number }}
        path: ${{ runner.temp }}/screenshots
    - uses: mshick/add-pr-comment@v1
      if: ${{ always() }}
      with:
        message: |
          You can find the app screenshots under the Artifacts at https://github.com/ParetoSecurity/pareto-mac/actions/runs/${{ github.run_id }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'